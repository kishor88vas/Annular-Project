/* * {
  box-sizing: border-box;
}

Col {
  height: 100px;
  width: 200px;
} */

import React, { useState } from "react";
import { Form, Button } from "react-bootstrap";

const useForm = (initialState) => {
  const [formData, setFormData] = useState(initialState);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleCheckboxChange = (e) => {
    const { name, checked } = e.target;
    setFormData({ ...formData, [name]: checked });
  };

  const handleAddCollege = () => {
    setFormData({
      ...formData,
      education: [
        ...formData.education,
        { college: "", course: "", yearOfPassing: "" },
      ],
    });
  };

  const handleCollegeInputChange = (e, index) => {
    const { name, value } = e.target;
    const updatedEducation = [...formData.education];
    updatedEducation[index][name] = value;
    setFormData({ ...formData, education: updatedEducation });
  };

  return {
    formData,
    handleInputChange,
    handleCheckboxChange,
    handleAddCollege,
    handleCollegeInputChange,
  };
};

const RegisterPage = () => {
  const initialState = {
    isCandidate: true,
    name: "",
    location: "",
    sponsorshipRequired: false,
    phoneNumber: "",
    summary: "",
    education: [{ college: "", course: "", yearOfPassing: "" }],
    skillset: "",
    tools: "",
    certification: "",
    volunteering: "",
  };

  const {
    formData,
    handleInputChange,
    handleCheckboxChange,
    handleAddCollege,
    handleCollegeInputChange,
  } = useForm(initialState);

  const handleSubmit = (e) => {
    e.preventDefault();
    // Handle form submission here
    console.log(formData);
  };

  return (
    <div className="container">
      <h2>Register Page</h2>
      <Form onSubmit={handleSubmit}>
        <Form.Group controlId="formRole">
          <Form.Label>Are you a candidate or recruiter?</Form.Label>
          <div>
            <Form.Check
              inline
              label="Candidate"
              type="radio"
              name="isCandidate"
              checked={formData.isCandidate}
              onChange={handleCheckboxChange}
            />
            <Form.Check
              inline
              label="Recruiter"
              type="radio"
              name="isCandidate"
              checked={!formData.isCandidate}
              onChange={handleCheckboxChange}
            />
          </div>
        </Form.Group>

        {formData.isCandidate && (
          <>
            <Form.Group controlId="formResume">
              <Form.Label>Upload Resume [.docx or pdf]</Form.Label>
              <Form.Control type="file" />
            </Form.Group>

            <Form.Group controlId="formPersonalDetails">
              <Form.Label>Personal details</Form.Label>
              <Form.Control
                type="text"
                placeholder="Name"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
              />
              <Form.Control
                type="text"
                placeholder="Location"
                name="location"
                value={formData.location}
                onChange={handleInputChange}
              />
              <Form.Check
                label="Sponsorship required"
                type="checkbox"
                name="sponsorshipRequired"
                checked={formData.sponsorshipRequired}
                onChange={handleCheckboxChange}
              />
              <Form.Control
                type="text"
                placeholder="Phone number"
                name="phoneNumber"
                value={formData.phoneNumber}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Form.Group controlId="formSummary">
              <Form.Label>Summary</Form.Label>
              <Form.Control
                as="textarea"
                rows={3}
                name="summary"
                value={formData.summary}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Form.Group controlId="formEducation">
              <Form.Label>Education</Form.Label>
              {formData.education.map((edu, index) => (
                <div key={index}>
                  <Form.Control
                    type="text"
                    placeholder="College"
                    name="college"
                    value={edu.college}
                    onChange={(e) => handleCollegeInputChange(e, index)}
                  />
                  <Form.Control
                    type="text"
                    placeholder="Course"
                    name="course"
                    value={edu.course}
                    onChange={(e) => handleCollegeInputChange(e, index)}
                  />
                  <Form.Control
                    type="text"
                    placeholder="Year of passing"
                    name="yearOfPassing"
                    value={edu.yearOfPassing}
                    onChange={(e) => handleCollegeInputChange(e, index)}
                  />
                </div>
              ))}
              <Button variant="secondary" onClick={handleAddCollege}>
                Add College
              </Button>
            </Form.Group>

            <Form.Group controlId="formSkillset">
              <Form.Label>Skillset</Form.Label>
              <Form.Control
                type="text"
                placeholder="Keywords for search"
                name="skillset"
                value={formData.skillset}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Form.Group controlId="formTools">
              <Form.Label>Tools</Form.Label>
              <Form.Control
                type="text"
                placeholder="Tools"
                name="tools"
                value={formData.tools}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Form.Group controlId="formCertification">
              <Form.Label>Certification</Form.Label>
              <Form.Control
                type="text"
                placeholder="Certification"
                name="certification"
                value={formData.certification}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Form.Group controlId="formVolunteering">
              <Form.Label>Volunteering</Form.Label>
              <Form.Control
                type="text"
                placeholder="Volunteering"
                name="volunteering"
                value={formData.volunteering}
                onChange={handleInputChange}
              />
            </Form.Group>

            <Button variant="primary" type="submit">
              Submit
            </Button>
          </>
        )}
      </Form>
    </div>
  );
};

export default RegisterPage;
